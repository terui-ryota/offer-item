// Code generated by MockGen. DO NOT EDIT.
// Source: rakuten_search_param.go

// Package mock_rakuten is a generated GoMock package.
package mock_rakuten

import (
	url "net/url"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRakutenSearchParam is a mock of RakutenSearchParam interface.
type MockRakutenSearchParam struct {
	ctrl     *gomock.Controller
	recorder *MockRakutenSearchParamMockRecorder
}

// MockRakutenSearchParamMockRecorder is the mock recorder for MockRakutenSearchParam.
type MockRakutenSearchParamMockRecorder struct {
	mock *MockRakutenSearchParam
}

// NewMockRakutenSearchParam creates a new mock instance.
func NewMockRakutenSearchParam(ctrl *gomock.Controller) *MockRakutenSearchParam {
	mock := &MockRakutenSearchParam{ctrl: ctrl}
	mock.recorder = &MockRakutenSearchParamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRakutenSearchParam) EXPECT() *MockRakutenSearchParamMockRecorder {
	return m.recorder
}

// UrlValues mocks base method.
func (m *MockRakutenSearchParam) UrlValues() url.Values {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UrlValues")
	ret0, _ := ret[0].(url.Values)
	return ret0
}

// UrlValues indicates an expected call of UrlValues.
func (mr *MockRakutenSearchParamMockRecorder) UrlValues() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UrlValues", reflect.TypeOf((*MockRakutenSearchParam)(nil).UrlValues))
}
